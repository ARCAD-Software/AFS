-- User Management Tables updated in version 2025.1.0

create table if not exists USERGROUPS (
    UGP_ID integer generated by default as identity primary key,
    UGP_CODE varchar(50), 
    UGP_NAME varchar(255), 
    UGP_DELETED integer default 0,
    UGP_UPDATE timestamp default current_timestamp);

create index UGP_CODE_INDEX on USERGROUPS (UGP_CODE);

create table USERGROUPS_USERS (
    UGU_ID integer generated by default as identity primary key,
    UGU_USR_ID integer,
    UGU_UGP_ID integer,
    constraint UGU_USR_UGP_UC unique (UGU_USR_ID, UGU_UGP_ID),
    constraint UGU_USR_ID_FK foreign key (UGU_USR_ID) references USERS (USR_ID) on delete cascade,
    constraint UGU_UGP_ID_FK foreign key (UGU_UGP_ID) references USERGROUPS (UGP_ID) on delete cascade);

create table SUBUSERGROUPS (
    SUG_ID integer generated by default as identity primary key,
    SUG_PARENT integer,
    SUG_CHILD integer,
    constraint SUG_PARENT_CHILD_UC unique (SUG_PARENT, SUG_CHILD),
    constraint SUG_CHILD_FK foreign key (SUG_CHILD) references USERGROUPS (UGP_ID) on delete cascade,
    constraint SUG_PARENT_FK foreign key (SUG_PARENT) references USERGROUPS (UGP_ID) on delete cascade);
    
drop view if exists USER_RIGHTS;

create table SUBPROFILES (
    PRP_ID integer generated by default as identity primary key,
    PRP_PARENT integer,
    PRP_CHILD integer,
    constraint PRP_PARENT_CHILD_UC unique (PRP_PARENT, PRP_CHILD),
    constraint PRP_CHILD_FK foreign key (PRP_CHILD) references PROFILES (PRF_ID) on delete cascade,
    constraint PRP_PARENT_FK foreign key (PRP_PARENT) references PROFILES (PRF_ID) on delete cascade);

insert into USER_TITLES (UST_DELETED) values (0);
