# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Release + build P2 repository

on: 
  push:
    tags:
      - '*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
       
    - name: Set up JDK 17 and 8
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: |
          8
          17
        # Below option needs to match the ID of the manifest BREE in order to pick the correct Java version for the build
        # Check pom.xml for more information about toolchains
        mvn-toolchain-id: |
          JavaSE-1.8
          JavaSE-17
          
    - name: Load keystore
      run: |
        echo "${{ secrets.CODESIGN_KEYSTORE }}" > $RUNNER_TEMP/codesign.p12.asc
        gpg -d --passphrase ${{ secrets.CODESIGN_KEYSTORE_PASSPHRASE }} --batch $RUNNER_TEMP/codesign.p12.asc > $RUNNER_TEMP/codesign.p12
        echo "Keystore created $RUNNER_TEMP/codesign.p12"
           
    - name: Build with Maven
      run: mvn -B package -Pflat-repo 
      env: 
        KEY_PASSWORD: ${{ secrets.CODESIGN_KEY_PASSWORD }}
        KEYSTORE_PASSWORD: ${{ secrets.CODESIGN_KEYSTORE_PASSWORD }}
        KEYSTORE: ${{ RUNNER_TEMP }}/codesign.p12
         
    - run: npm install github-release-notes -g
      shell: bash
    - run: |
        sudo apt-get update -y
        sudo apt-get install -y jq
      shell: bash
    - run: gren release --data-source=issues -B -t ${{ github.ref_name }} -o
      env:
        GREN_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      shell: bash
      
    - name: Release and upload flat P2 website
      uses: softprops/action-gh-release@v1
      with:
        name: "Release ${{ github.ref_name }}"
        body: "The generated P2 repository is available at the following URL : https://github.com/ARCAD-Software/AFS/releases/download/${{ github.ref_name }}/"
        append_body: true
        files: |
          releng/update/target/flat-repository/*
